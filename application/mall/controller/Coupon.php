<?php
// +----------------------------------------------------------------------
// | JSHOP [ 小程序商城 ]
// +----------------------------------------------------------------------
// | Copyright (c) 2018 http://jihainet.com All rights reserved.
// +----------------------------------------------------------------------
// | Author: tianyu <tianyu@jihainet.com>
// +----------------------------------------------------------------------
namespace app\Mall\controller;

use app\common\controller\Mall;
use app\common\model\AreaMallBuyerCoupon;
use app\common\model\AreaMallBuyerCouponCategory;
use app\common\model\AreaMallBuyerCouponGoods;
use app\common\model\AreaMallBuyerCouponList;
use app\common\model\AreaMallBuyerCouponSendTask;
use app\common\model\AreaMallBuyerCouponSite;
use app\common\model\AreaMallSite;
use app\common\model\Buyer;
use function GuzzleHttp\Psr7\try_fopen;
use think\Db;
use think\exception\PDOException;
use app\common\model\Goods as GoodsModel;

class Coupon extends Mall
{

    /**
     * 初始化
     */
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        //检测优惠劵日期 到期就自动改为下架
        $list = AreaMallBuyerCoupon::all(['mall_id'=>$areaId,'status'=>1]);
        if($list)
        {
            foreach ($list as $key=>$item) {
                if(time() >= $item['end_time'])
                {
                    AreaMallBuyerCoupon::update(['status'=>0],['cp_id'=>$item['cp_id']]);
                    $in = AreaMallBuyerCouponList::get(['cp_id'=>$item['cp_id']]);
                    if($in)
                    {
                        AreaMallBuyerCouponList::update(['coupon_state'=>0],['cp_id'=>$item['cp_id']]);
                    }
                }
            }
        }
    }

    /**
     * @return array|mixed|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function index()
    {

        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $where=[];
                $whereTime=[];
                if(isset($params['name']) && !empty($params['name']))
                {
                    $where[] = ['cp_title','like','%'.$params['name'].'%'];
                }
                if(isset($params['status']) && !empty($params['status']))
                {
                    $where['status'] = $params['status'];
                }

                if(isset($params['date']) && !empty($params['date']))
                {
                    $theDate = explode(' 到 ',$params['date']);
                    if(!empty($theDate[0]))
                    {
                        $whereTime[]    = ['start_time','>=',strtotime($theDate[0])];
                    }

                    if(!empty($theDate[1]))
                    {
                        $whereTime[]    = ['start_time','<',strtotime($theDate[1])];
                    }

                }
                //上下架
                if(isset($params['coupon_on']) && !empty($params['coupon_on']))
                {
                    if($params['coupon_on'] == 'on')
                    {
                        $where['status'] = 1;
                    }else{
                        $where['status'] = 0;
                    }

                }
                $page = $this->request->get("page", 0);
                $limit = $this->request->get("limit", 0);
                $where['mall_id'] = $areaId;
                list($where,$page,$limit) = [$where,$page,$limit];
                $list = Db::name('area_mall_buyer_coupon')
                    ->where($where)
                    ->where($whereTime)
                    ->page($page,$limit)
                    ->select();
                $total = Db::name('area_mall_buyer_coupon')
                    ->where($where)
                    ->where($whereTime)
                    ->count();

                $status = ['0'=>'关闭','1'=>'正常'];
                $useType = ['1'=>'平台推送','2'=>'用户领取','3'=>'不限'];

                foreach ($list as $key=>$val) {
                    $list[$key]['useType']       = $useType[$val['use_type']];
                    //获取已领取数量
                    $list[$key]['num'] = (new AreaMallBuyerCouponList())->where(['cp_id'=>$val['cp_id']])->count();
//                    $list[$key]['status']       = $status[$val['status']];
                    $list[$key]['startTime']    = date("Y-m-d",$val['start_time']);
                    $list[$key]['endTime']      = date("Y-m-d",$val['end_time']);
                }

                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
        }
        $all = Db::name('area_mall_buyer_coupon')->where(['mall_id'=>$areaId])->count();
        $countOn = Db::name('area_mall_buyer_coupon')->where(['mall_id'=>$areaId,'status'=>1])->count();
        $countOff = Db::name('area_mall_buyer_coupon')->where(['mall_id'=>$areaId,'status'=>0])->count();
        $this->assign(compact(['all','countOn','countOff']));
        return $this->fetch();
    }

    /**
     * @return mixed
     */
    public function statistics()
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        //这里只有区域管理员可以设置，这里先注释掉
        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;

        return $this->fetch();
    }

    /**
     * @return array
     */
    public function statistics_coupon()
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        //这里只有区域管理员可以设置，这里先注释掉
        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        //7天内已使用
        $finish = AreaMallBuyerCouponList::statistics($mallId,AreaMallBuyerCouponList::COUPON_STATE_USED);
        //7天内未使用
        $no_finish = AreaMallBuyerCouponList::statistics($mallId,AreaMallBuyerCouponList::COUPON_STATE_UNUSED);
        //已停用
        $un_finish = AreaMallBuyerCouponList::statistics($mallId,AreaMallBuyerCouponList::COUPON_STATE_DEACTIVATED);

        $data = [
            'legend' => [
                'data' => ['已使用', '未使用','已停用']
            ],
            'xAxis' => [
                [
                    'type' => 'category',
                    'data' => $finish['day']
                ]
            ],
            'series' => [
                [
                    'name' => '已使用',
                    'type' => 'line',
                    'data' => $finish['data']
                ],
                [
                    'name' => '未使用',
                    'type' => 'line',
                    'data' => $no_finish['data']
                ],
                [
                    'name' => '已停用',
                    'type' => 'line',
                    'data' => $un_finish['data']
                ]
            ]
        ];

        return $data;
    }

    /**
     * 添加优惠劵
     * @return array|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function add()
    {
//        $this->view->engine->layout(false);

        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isPost())
        {
            $params = $this->request->param('data');

            if(empty($params['cp_title']))
            {
                return ['status'=>false,'msg'=>'请填写优惠劵名称'];
            }

            $data = [];
            if(isset($params['cp_price_discount']))
            {
                $data['cp_price_discount'] = $params['cp_price_discount'];
            }

            if(isset($params['cp_money_limit']))
            {
                $data['cp_money_limit'] = $params['cp_money_limit'];
            }

            if(isset($params['cp_money_discount']))
            {
                $data['cp_money_discount'] = $params['cp_money_discount'] / 10;
            }

            if(!$params['date']){
                return error_code(15002);
            }else{
                $theDate = explode(' 到 ',$params['date']);
                if(count($theDate) != 2){
                    return error_code(15002);
                }
            }

            $data['mall_id'] = $areaId;
            $data['start_time']     = strtotime($theDate[0]);
            $data['end_time']       = strtotime($theDate[1]);
            $data['publish_time']   = strtotime($params['publish_time']);
            $data['use_type']       = $params['use_type'];
            $data['class_type']     = $params['class_type'];
            $data['cp_title']       = $params['cp_title'];
            $data['cp_type']        = $params['cp_type'];
            $data['cp_desc']        = $params['cp_desc'];
            $data['cp_num']         = $params['cp_num'];
            $data['cp_percent_num'] = !empty($params['cp_percent_num']) ? $params['cp_percent_num'] : 1;
            $data['category_id']    = $params['category_id'];
            $data['status']         = !empty($params['status']) ? $params['status'] : 0;
            $data['created_at']     = date("Y-m-d H:i:s");
            if(empty($data['cp_num'])){
                //剩余多少张
                $data['cp_remain_num'] = 9999;
            }else{
                $data['cp_remain_num'] = $data['cp_num'];
            }


            Db::startTrans();
            try{
                Db::name('area_mall_buyer_coupon')->insert($data);
                Db::commit();
                return ['status'=>true,'msg'=>'操作成功'];
            }catch (PDOException $e){
                Db::rollback();
                return ['status'=>false,'msg'=>'操作失败'];
            }

        }
        //获取分类
        $category = Db::name('area_mall_buyer_coupon_category')->where('mall_id',$areaId)->select();
        $this->assign('category',$category);
        return $this->fetch();
    }

    /**
     * @param null $id
     * @return array|mixed
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function edit($id=null)
    {
        $id = isset($id) ? $id : $this->request->get('id');
        $get = (new AreaMallBuyerCoupon())->get(['cp_id'=>$id]);
        if($this->request->isPost())
        {
            $params = $this->request->param();

            if(empty($params['cp_title']))
            {
                return ['status'=>false,'msg'=>'请填写优惠劵名称'];
            }

            $data = [];
            if(isset($params['cp_price_discount']))
            {
                $data['cp_price_discount'] = $params['cp_price_discount'];
            }

            if(isset($params['cp_money_limit']))
            {
                $data['cp_money_limit'] = $params['cp_money_limit'];
            }

            if(isset($params['cp_money_discount']))
            {
                $data['cp_money_discount'] = $params['cp_money_discount'] / 10;
            }

            if(isset($params['cp_num_limit']))
            {
                $data['cp_num_limit']   = $params['cp_num_limit'];
            }

            if(!input('?param.date') || !input('param.date')){
                return error_code(15002);
            }else{
                $theDate = explode(' 到 ',input('param.date'));
                if(count($theDate) != 2){
                    return error_code(15002);
                }
            }

            $data['cp_title']       = $params['cp_title'];
            $data['start_time']     = strtotime($theDate[0]);
            $data['end_time']       = strtotime($theDate[1]);
            $data['publish_time']   = strtotime($params['publish_time']);
            $data['cp_desc']        = $params['cp_desc'];
            $data['cp_num']         = $params['cp_num'];
            $data['cp_percent_num'] = !empty($params['cp_percent_num']) ? $params['cp_percent_num'] : 1;
            $data['status']         = !empty($params['status']) ? $params['status'] : 0;

            if(empty($data['cp_num'])){
                //剩余多少张
                $data['cp_remain_num'] = 9999;
            }else{
                $data['cp_remain_num'] = $data['cp_num'];
            }

            Db::startTrans();
            try{
                Db::name('area_mall_buyer_coupon')->where('cp_id',$params['cp_id'])->update($data);
                Db::commit();
                return ['status'=>true,'msg'=>'操作成功'];
            }catch (PDOException $e){
                Db::rollback();
                return ['status'=>false,'msg'=>'操作失败'];
            }
        }

        $category = (new AreaMallBuyerCouponCategory())->where('id',$get['category_id'])->find();
        $get['startTime'] = date("Y-m-d H:i:s",$get['start_time']);
        $get['endTime'] = date("Y-m-d H:i:s",$get['end_time']);
        $get['publishTime'] = date("Y-m-d H:i:s",$get['publish_time']);
        $get['category_name'] = $category['name'];
        $get['cp_money_discount'] = $get['cp_money_discount'] * 10;
        $this->assign('find',$get);
        return $this->view->fetch();
    }

    //设置店铺
    public function settingSite()
    {
        $this->view->engine->layout(false);

        $filter              = input('request.');
        $quickId = isset($filter['cid']) ? $filter['cid'] : 0;
        //获取店铺信息
        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $list = (new AreaMallBuyerCouponSite())
                    ->where('cp_id',$params['cid'])
                    ->page($params['page'],$params['limit'])
                    ->select();

                $total = (new AreaMallBuyerCouponSite())
                    ->where('cp_id',$params['cid'])
                    ->count();
                foreach ($list as $key=>$val) {
                    $list[$key]['site_name'] = (new AreaMallSite())->where('site_id',$val['site_id'])->find()['site_name'];
                }

                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
        }
        $this->assign('cid', $quickId);
        return $this->fetch();
    }

    /**
     * @return array|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function settingSitePost()
    {
        $this->view->engine->layout(false);

        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isPost())
        {
            $params = $this->request->param();

            if($params)
            {
                if(!isset($params['site']) || empty($params['site']))
                {
                    return ['status'=>true,'msg'=>'请选择店铺'];
                }
                $data=[];
                foreach ($params['site'] as $key=>$val) {
                    $data[] = [
                        'cp_id' => $params['cp_id'],
                        'site_id' => $val,
                    ];
                }
                Db::startTrans();
                try{
                    (new AreaMallBuyerCouponSite())->insertAll($data,true);
                    Db::commit();
                    return ['status'=>true,'msg'=>'操作成功'];
                }catch (PDOException $e){
                    Db::rollback();
                    return ['status'=>false,'msg'=>'操作失败'];
                }
            }
            return ['status'=>false,'msg'=>'参数异常'];
        }

        //查询需要添加的店铺
        $site = (new AreaMallSite())->where('mall_id',$areaId)->select();
        $this->assign('site',$site);

        $filter              = input('request.');
        $quickId = isset($filter['cid']) ? $filter['cid'] : 0;
        $this->assign('cid', $quickId);

        return $this->fetch();
    }

    /**
     * @param null $id
     * @return array
     * @throws \think\Exception
     */
    public function siteDel($id=null)
    {
        if($this->request->isPost())
        {
            $params = $this->request->param();
            if($params)
            {
                Db::startTrans();
                try{
                    (new AreaMallBuyerCouponSite())->where(['cp_id'=>$params['cp_id'],'site_id'=>$params['site_id']])->delete();
                    Db::commit();
                    return ['status'=>true,'msg'=>'操作成功'];
                }catch(PDOException $e)
                {
                    Db::rollback();
                    return ['status'=>false,'msg'=>'操作失败'];
                }
            }
        }
        return [];
    }

    public function multiDel($ids=null)
    {
        
    }

    /**
     * @return mixed
     */
    public function addGoods()
    {
        $this->view->engine->layout(false);
        $filter              = input('request.');
        $quickId = isset($filter['cid']) ? $filter['cid'] : 0;
        $this->assign('cid', $quickId);
        return $this->fetch();
    }

    /**
     * @return mixed
     */
    public function editGoods()
    {
        $this->view->engine->layout(false);
        $filter              = input('request.');
        $quickId = isset($filter['cid']) ? $filter['cid'] : 0;
        $this->assign('cid', $quickId);
        return $this->fetch();
    }

    /**
     * @return array
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getGoodsQuick()
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        if($this->request->isAjax())
        {
            $goodsModel = new GoodsModel();

            $id = $this->request->get('cid');
            $page  = $this->request->get('page');
            $limit = $this->request->get('limit');
            $name  = $this->request->get('name');

            $filter  = (new AreaMallBuyerCouponGoods())
                ->where('cp_id',$id)
                ->field('spc_id')
                ->select();

            $ids = '';
            foreach ($filter as $key=>$val) {
                $ids .= $val['spc_id'].',';
            }
            $ids = rtrim($ids,',');
            $where = [];
            if (isset($userWhere['mall_id']) && $userWhere['mall_id'] != "") {
                $where[] = ['mall_id', 'eq', $userWhere['mall_id']];
            }

            if(isset($name) && !empty($name))
            {
                $where['name'] = ['name','LIKE','%'.$name.'%'];
            }

            if (isset($filter) && $filter != "") {
                $where[] = ['id', 'in', $ids];
            }

            $list = $goodsModel->where($where)->page($page,$limit)->field('id,image_id,name,brand_id,price,stock')->select();

            foreach ($list as $key=>$val) {
                $list[$key]['cp_id'] = $id;
                $list[$key]['image'] = _sImage($val['image_id']);
            }

            $total = $goodsModel->where($where)->count();

            return ['code'=>0,'count'=>$total,'data'=>$list];
        }
    }

    /**
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function addGoodsQuickList()
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        $goodsModel = new goodsModel();
        $filter              = input('request.');
        $quickId = isset($filter['cid']) ? $filter['cid'] : 0;

        //将店铺的其他活动添加的商品也需要隐藏
        $filter['notId'] = (new AreaMallBuyerCouponGoods())->getGoodsIdsForQuick($quickId);

        //列表加上权限的筛选
        $filter = array_merge($filter,$userWhere);
        $this->assign('cid', $quickId);

        $list = $goodsModel->tableDataA($filter,true,$this->getMyAuthType());
        return $list;
    }

    /**
     * 添加商品
     * @return array
     */
    public function addGoodsQuick()
    {
        if($this->request->isPost())
        {
            $params = $this->request->param();

            $goodsId = $params['id'];
            $goodsIds = explode(",",$goodsId);
            $quickId = $params['cid'];

            $couponGoodsIns = (new AreaMallBuyerCouponGoods());
            collect($goodsIds)->each(function($goodsId)use($quickId,$couponGoodsIns){
                $couponGoodsIns->addQuickGoodsForQuickId($quickId,$goodsId);
            });

            return [
                'status' => true,
                'data' => url('coupon/index'),
                'msg' => '添加成功'
            ];
        }
        return [];
    }

    /**
     * 单品移除
     * @return array
     * @throws \think\Exception
     */
    public function removeQuickGoods()
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        if($this->request->isAjax())
        {
            $id = $this->request->param('id');

            try{
                $goodsMapping = new AreaMallBuyerCouponGoods();
                $goodsMapping->where('spc_id',$id)->delete();
                return ['status'=>true,'msg'=>'移除成功'];
            }catch (PDOException $e){
                return ['status'=>false,'msg'=>'移除失败'];
            }

        }
        return ['status'=>false,'msg'=>'请求失败'];
    }

    /**
     * 批量移除
     * @param null $ids
     * @return array
     * @throws \Exception
     */
    public function removeQuickGoodsMulti($ids=null)
    {
        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        if($this->request->isAjax())
        {
            $ids = $ids ? rtrim($ids,',') : rtrim($this->request->param("ids"),',');

            $ids = rtrim($ids,',');

            try{
                $goodsMapping = new AreaMallBuyerCouponGoods();
                $goodsMapping->whereIn('spc_id',$ids)->delete();
                return ['status'=>true,'msg'=>'移除成功'];
            }catch (PDOException $e){
                return ['status'=>false,'msg'=>'移除失败'];
            }

        }
        return ['status'=>false,'msg'=>'请求失败'];
    }

    /*********************分类设置添加****************************/

    /**
     * 分类查询
     * @return mixed|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function couponCategory()
    {

        //获取权限的筛选条件
        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $where=[];
                $page = $this->request->get("page", 0);
                $limit = $this->request->get("limit", 0);

                $where['mall_id'] = $areaId;

                list($where,$page,$limit) = [$where,$page,$limit];

                $list = Db::name('area_mall_buyer_coupon_category')
                    ->where($where)
                    ->page($page,$limit)
                    ->select();
                $total = Db::name('area_mall_buyer_coupon_category')
                    ->where($where)
                    ->count();

                $status = ['0'=>'关闭','1'=>'正常'];
                foreach ($list as $key=>$val) {
                    $list[$key]['status'] = $status[$val['status']];
                }
                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
        }

        return $this->fetch();
    }


    public function getSite()
    {
        $this->view->engine->layout(false);
        if($this->request->isPost())
        {
            $id = $this->request->param('id');

            if($id == 2)
            {
                //查询店铺
                $siteIns = (new AreaMallSite())->select();
                $this->assign('list',$siteIns);
                return ['status'=>true,'msg'=>'','data'=>$this->fetch()];
            }
            return ['status'=>false,'msg'=>'','data'=>''];
        }
    }

    /**
     * 用户领取优惠劵记录
     * @param null $cid
     * @return array|mixed|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getCouponListLog($cid=null)
    {
        $this->view->engine->layout(false);

        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        $cid = isset($cid) ? $cid  : $this->request->get('cid');
        $cp = AreaMallBuyerCoupon::get(['cp_id'=>$cid]);

        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $where=[];
                $page = $this->request->get("page", 0);
                $limit = $this->request->get("limit", 0);
                $where['mall_id']   = $areaId;
                $where['cp_id']     = $params['id'];
                if(isset($params['buyerId']) && !empty($params['buyerId']))
                {
                    $where['buyer_id'] = $params['buyerId'];
                }
                list($where,$page,$limit) = [$where,$page,$limit];

                $list = Db::name('area_mall_buyer_coupon_list')
                    ->where($where)
                    ->page($page,$limit)
                    ->select();
                $total = Db::name('area_mall_buyer_coupon_list')
                    ->where($where)
                    ->count();
                $state = [0=>'停用',1=>'可用',2=>'锁定',3=>'已使用'];
                foreach ($list as $key=>$val) {
                    $list[$key]['coupon_state'] = $state[$val['coupon_state']];
                    $list[$key]['buyer_name']   = Buyer::get(['buyer_id'=>$val['buyer_id']])['buyer_name'];
                }

                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
        }
        $this->assign('cp',$cp);
        return $this->fetch();
    }

    /**
     * @return array
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getCategory()
    {
        $this->view->engine->layout(false);

        if($this->request->isPost())
        {
            $id = $this->request->param('id');
            //查询分类
            $find = Db::name('area_mall_buyer_coupon_category')->where('id',$id)->field('type,name')->find();

            $this->assign('find',$find);

            return ['status'=>true,'msg'=>'','data'=>$this->fetch()];
        }
    }

    /**
     * 添加分类
     * @return array|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function categoryAdd()
    {

        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isPost())
        {
            $params = $this->request->param();
            if($params)
            {

                //检测是否有重复劵分类
                if($this->checkCategory(['name'=>$params['name']]))
                {
                    return ['status'=>false,'msg'=>'分类名称重复'];
                }

                Db::startTrans();
                try{

                    $data['mall_id'] = $areaId;
                    $data['status'] = isset($params['status']) ? 1 : 0;
                    $data['type']   = isset($params['type']) ? $params['type'] : 0;
                    $data['name']   = isset($params['name']) ? $params['name'] : '';
                    $data['created_at']   = date("Y-m-d H:i:s");

                    Db::name('area_mall_buyer_coupon_category')->insert($data);
                    Db::commit();
                    return ['status'=>true,'msg'=>'操作成功'];
                }catch (PDOException $e){
                    Db::rollback();
                    return ['status'=>false,'msg'=>'操作失败'];
                }
            }
        }

        return $this->fetch();
    }

    /**
     * @param null $id
     * @return array|mixed
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function categoryEdit($id=null)
    {
        $id = isset($id) ? $id : $this->request->get('id');
        if($this->request->isPost())
        {
            $params = $this->request->param();
            if($params)
            {
                //检测是否有重复劵分类
                Db::startTrans();
                try{
                    $data['status'] = isset($params['status']) ? 1 : 0;
                    $data['name']   = isset($params['name']) ? $params['name'] : '';
                    $data['updated_at']   = date("Y-m-d H:i:s");

                    Db::name('area_mall_buyer_coupon_category')->where('id',$params['id'])->update($data);
                    Db::commit();
                    return ['status'=>true,'msg'=>'操作成功'];
                }catch (PDOException $e){
                    Db::rollback();
                    return ['status'=>false,'msg'=>'操作失败'];
                }

            }
        }

        $find = Db::name('area_mall_buyer_coupon_category')->where('id',$id)->find();
        $this->assign('find',$find);
        return $this->fetch();
    }

    /**
     * 检测分类是否存在
     * @param $data
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function checkCategory($data)
    {
        $res = Db::name('area_mall_buyer_coupon_category')->where($data)->find();
        if($res)
        {
            return True;
        }else{
            return False;
        }
    }

    //--------------------群发劵------------------------

    /**
     * @return array|mixed|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getTaskList()
    {
        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $where = [];
                list($where,$page,$limit) = [$where,$params['page'],$params['limit']];
                $list = Db::name('area_mall_buyer_coupon_send_task')
                    ->where($where)
                    ->page($page,$limit)
                    ->order('weight desc')
                    ->select();
                $total = Db::name('area_mall_buyer_coupon_send_task')
                    ->where($where)
                    ->count();

                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
        }

        return $this->fetch();
    }


    /**
     * @return array|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function addTask()
    {
        $this->view->engine->layout(false);

        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }

        if($this->request->isPost())
        {
            $params = $this->request->param();
            if($params)
            {

                if(empty($params['content']['title']))
                {
                    return ['status'=>false,'msg'=>'请填写任务标题'];
                }
                //判断content参数数据
                if(isset($params['content']) && isset($params['table']))
                {
                    $where = [];
                    //判断勾选数据 存在
                    if (isset($params['content']['plus']) && isset($params['content']['general'])){
                        $where[] = ['is_plus','in',[0,1]];
                    }elseif (isset($params['content']['plus']))
                    {
                        $where['is_plus'] = 1;
                    }elseif (isset($params['content']['general'])){
                        $where['is_plus'] = 0;
                    }else{
                        $where['is_plus'] = 1;
                    }
                    
                    //获取用户
                    $buyerIds = (new Buyer())->where($where)->field('buyer_id')->select();

                    //分析用户数据 转字符串 逗号分隔
                    $ids = [];
                    foreach ($buyerIds as $key=>$val) {
                        $ids[] = $val['buyer_id'];
                    }
                    $ids = implode(',',$ids);
                    //优惠劵json数据
                    $cou = [];
                    foreach ($params['table'] as $t=>$tab) {
                        $cou[] = [
                            'cp_id' => $tab['cp_id'],
                            'cp_title' => $tab['cp_title'],
                            'num' => $tab['num'],
                        ];
                    }
                    $content = [
                        'buyerIds' => $ids,
                        'couponIds' => $cou
                    ];
                    //组装数据
                    $data = [
                        'title' => $params['content']['title'],
                        'content' => json_encode($content),
                        'weight' => $params['content']['weight'],
                        'task_start_time' => strtotime($params['content']['task_start_time']),
                        'task_end_time' => strtotime($params['content']['task_end_time']),
                        'status' => $params['content']['status'],
                        'created_at' => date("Y-m-d H:i:s"),
                    ];

                    Db::startTrans();
                    try{
                        (new AreaMallBuyerCouponSendTask())->addData($data);
                        Db::commit();
                        return ['status'=>true,'msg'=>'操作成功'];
                    }catch (PDOException $e){
                        Db::rollback();
                        return ['status'=>false,'msg'=>'操作失败'];
                    }
                }
            }

        }

        return $this->fetch();
    }

    /**
     * @return array|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getCoupon()
    {

        $userWhere = $this->getMyUserWhere();
        $areaId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;
        if(empty($areaId)){
            return [
                'status' => false,
                'msg' => '只有区域管理员才有权限打开此界面'
            ];
        }
        if($this->request->isAjax())
        {
            $params = $this->request->param();
            if($params)
            {
                $where = [];
                $where[] = ['mall_id','eq',$areaId];
                $where[] = ['use_type','in',[1,3]];
                $where[] = ['end_time','>',time()];
                list($where,$page,$limit) = [$where,$params['page'],$params['limit']];
                $list = (new AreaMallBuyerCoupon())
                    ->where($where)
                    ->page($page,$limit)
                    ->field('cp_title,cp_id,start_time,end_time')
                    ->select();
                $total = (new AreaMallBuyerCoupon())
                    ->where($where)
                    ->count();
                foreach ($list as $key=>$val) {
                    $list[$key]['startTime'] = date("Y-m-d",$val['start_time']);
                    $list[$key]['endTime'] = date("Y-m-d",$val['end_time']);
                    $list[$key]['num'] = 1;
                }

                $result = array("code"=>0,"count" => $total, "data" => $list);
                return json($result);
            }
            return [];
        }

        return [];
    }


    /**
     * @param null $id
     * @return array
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function sendGoCoupon($id = null)
    {
        $id = isset($id) ? $id : $this->request->param('id');
        if($id)
        {
            $get = AreaMallBuyerCouponSendTask::get(['task_id'=>$id]);
            if(!$get)
                return ['status'=>false,'msg'=>'数据不存在!~'];
            //解析数据 发送优惠券
            $content = json_decode($get['content'],true);//json数据
            //优惠券数据
            $coupon = $content['couponIds'];

            $buyerIds = $content['buyerIds'];//用户数据
            $buyer = explode(',',$buyerIds);

                foreach ($coupon as $c=>$cou) {
                    //查询优惠劵信息
                    $info = (new AreaMallBuyerCoupon())->where('cp_id',$cou['cp_id'])->find();
                    for ($i=1;$i<=$cou['num'];$i++){
                        foreach ($buyer as $key=>$val) {
                            $data[] = [
                                'mall_id'       => $info['mall_id'],
                                'site_id'       => $info['site_id'],
                                'buyer_id'      => $val,
                                'cp_id'         => $info['cp_id'],
                                'coupon_title'  => $info['cp_title'],
                                'coupon_sn'     => rand(10000, 99999) . rand(10000, 99999),
                                'coupon_state'  => 1,
                                'coupon_type'   => $info['cp_type'],
                                'coupon_class_type'     => $info['class_type'],
                                'coupon_num_limit'      => $info['cp_num_limit'],
                                'coupon_price_discount' => $info['cp_price_discount'],
                                'coupon_money_limit'    => $info['cp_money_limit'],
                                'coupon_money_discount' => $info['cp_money_discount'],
                                'is_type'       => $info['use_type'],
                                'remark'        => $info['cp_desc'],
                                'push_time'     => $info['publish_time'],
                                'begin_time'    => $info['start_time'],
                                'end_time'      => $info['end_time'],
                                'created_at'    => date("Y-m-d H:i:s"),
                            ];
                        }
                    }
                }

                Db::startTrans();
                try{
                    (new AreaMallBuyerCouponList())->insertAll($data);
                    //发送成功之后更改任务状态
                    (new AreaMallBuyerCouponSendTask())->where(['task_id'=>$get['task_id']])->update(['task_state'=>1]);
                    Db::commit();
                    return ['status'=>true,'msg'=>'推送成功'];
                }catch (PDOException $e){
                    Db::rollback();
                    return ['status'=>false,'msg'=>'推送失败'];
                }
        }
    }

    /**
     * @param null $ids
     * @return array
     * @throws \think\Exception
     */
    public function del($ids=null)
    {
        $ids = isset($ids) ? $ids : $this->request->param('ids');
        if($ids)
        {
            $get = AreaMallBuyerCouponSendTask::get(['task_id'=>$ids]);
            if(!$get)
                return [];
            Db::startTrans();
            try{
                (new AreaMallBuyerCouponSendTask())->where('task_id',$get['task_id'])->delete();
                Db::commit();
                return ['status'=>true,'msg'=>'删除成功'];
            }catch (PDOException $e){
                Db::rollback();
                return ['status'=>false,'msg'=>'删除失败'];
            }
        }
    }

    /**
     * 上下架处理
     * @return array
     */
    public function isOpen()
    {
        if($this->request->isPost())
        {
            $params = $this->request->param();
            if($params)
            {
                $cpId = isset($params['cpId']) ? $params['cpId'] : -1;
                $type = isset($params['type']) ? $params['type'] : false;
                Db::startTrans();
                try{
                    if($type === 'true') //上架
                    {
                        AreaMallBuyerCoupon::update(['status'=>1],['cp_id'=>$cpId]);
                        //查询用户是否领取过优惠劵
                        $in = AreaMallBuyerCouponList::get(['cp_id'=>$cpId]);
                        if(!empty($in))
                        {
                            AreaMallBuyerCouponList::update(['coupon_state'=>1],['cp_id'=>$cpId]);
                        }
                    }
                    if($type === 'false'){ //下架
                        AreaMallBuyerCoupon::update(['status'=>0],['cp_id'=>$cpId]);
                        //查询用户是否领取过优惠劵
                        $in = AreaMallBuyerCouponList::get(['cp_id'=>$cpId]);
                        if(!empty($in))
                        {
                            AreaMallBuyerCouponList::update(['coupon_state'=>0],['cp_id'=>$cpId]);
                        }
                    }
                    Db::commit();
                    return ['status'=>true,'msg'=>'操作成功'];
                }catch (PDOException $e){
                    Db::rollback();
                    return ['status'=>false,'msg'=>'操作失败'];
                }
            }
            return ['status'=>false,'msg'=>'参数错误'];
        }
        return ['status'=>false,'msg'=>'请求方式异常'];
    }
}