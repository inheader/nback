<?php/** * Created by PhpStorm. * User: Lyunp * Date: 2019/12/30 * Time: 8:58 */namespace app\mall\controller;use app\common\controller\Mall;use app\common\model\AreaMallSite;use app\common\model\Buyer;use app\common\model\MallPopup;use app\common\model\MallPopupGroup;use app\common\model\OrderCommon;use think\Db;use think\exception\PDOException;class Delivery extends Mall{    /**     * 初始化     */    protected function initialize()    {        parent::initialize(); // TODO: Change the autogenerated stub    }    /**     * 显示     * @return mixed|\think\response\Json     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function popup()    {        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        //new 实例        $model = new MallPopup();        if($this->request->isAjax())        {            $params = $this->request->param();            if($params)            {                $where = [];                $page = isset($params['page']) ? $params['page'] : 1;                $limit = isset($params['limit']) ? $params['limit'] : 10;                //默认                if(!isset($params['popup_on']))                {                    $where[] = ['status','=',1];                }                if(isset($params['popup_on']) && !empty($params['popup_on']) && $params['popup_on'] == 'all')                {                    $where = [];                }                if(isset($params['popup_on']) && !empty($params['popup_on']) && $params['popup_on'] == 'on')                {                    $where[] = ['status','=',1];                }                if(isset($params['popup_on']) && !empty($params['popup_on']) && $params['popup_on'] == 'off')                {                    $where[] = ['status','=',2];                }//                if(isset($params['popup_on']) && !empty($params['popup_on']) && $params['popup_on'] == 'del')//                {//                    $where[] = ['is_delete','=',1];//                }                $where[] = ['mall_id','=',$mallId];                $where[] = ['is_delete','<>',1];                list($where,$page,$limit) = [$where,$page,$limit];                $list = $model                    ->where($where)                    ->page($page,$limit)                    ->order('start_time','desc')                    ->select();                $total = $model                    ->where($where)                    ->count();                foreach ($list as $key=>$item) {                    $list[$key]['startTime'] = date("Y-m-d",$item['start_time']);                    $list[$key]['entTime']   = date("Y-m-d",$item['end_time']);                }                $result = array("code"=>0,"count" => $total, "data" => $list);                return json($result);            }            return json(['code'=>'1','data'=>'参数异常']);        }        $count = $model->where(['mall_id'=>$mallId,'is_delete'=>0])->count();        $count_on = $model->where(['mall_id'=>$mallId,'status'=>1,'is_delete'=>0])->count();        $count_off = $model->where(['mall_id'=>$mallId,'status'=>2,'is_delete'=>0])->count();        $count_del = $model->where(['mall_id'=>$mallId,'is_delete'=>1])->count();        $this->assign(compact('count','count_on','count_off','count_del'));        return $this->fetch();    }    /**     * 新增     * @return array|mixed     */    public function add_popup()    {        $this->view->engine->layout(false);        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        //new 实例        $model = new MallPopup();        if($this->request->isPost())        {            $params = $this->request->param();            if($params)            {                $siteId = 0;                $goodsId = 0;                switch ($params['type'])                {                    case '1':                        $url = $params['url'];                        break;                    case '2':                        //分析货品编号 读取商品ID                        $goods  = \app\common\model\Goods::get(['bn'=>$params['goods_id']]);                        $goodsId = $goods['id'];                        $url = "pages/goods/detail?spcId=".$goodsId;                        break;                    case '3':                        //分析店铺ID值                        $site = explode('-',$params['site_id']);                        $siteId = $site[1];                        $url = "pages/shop/index?siteId=".$siteId;                        break;                    default:                        $url = "";                        break;                }                if(empty($params['image']))                {                    return ['status'=>false,'msg'=>'请上传活动图片'];                }                //用户ID数                $buyerIds = [];                if(isset($params['buyer_id']) && !empty($params['buyer_id']))                {                    $buyerIds = explode(",",$params['buyer_id']);                }                //分析日期格式                if(isset($params['date']) && !empty($params['date']))                {                    //分割日期                    $date = explode(" - ",$params['date']);                    $startTime  = $date[0];                    $endTime    = $date[1];                }else{                    return ['status'=>false,'msg'=>'请选择活动日期'];                }                //组装数据                $data = [                    'mall_id'       => $mallId,                    'type'          => $params['type'],                    'url'           => $url,                    'images'        => $params['image'],                    'site_id'       => !empty($params['site_id']) ? $siteId : 0,                    'goods_id'      => !empty($params['goods_id']) ? $goodsId : 0,                    'start_time'    => strtotime($startTime),                    'end_time'      => strtotime($endTime),                    'scope'         => $params['scope'],                    'status'        => $params['status'],                    'created_at'    => date("Y-m-d H:i:s"),                ];                Db::startTrans();                try{                    $res = MallPopup::create($data);                    foreach ($buyerIds as $b=>$buyerId) {                        MallPopupGroup::create(['popup_id'=>$res['id'],'buyer_id'=>$buyerId]);                    }                    Db::commit();                    return ['status'=>true,'msg'=>'新增成功'];                }catch (PDOException $e){                    Db::rollback();                    return ['status'=>false,'msg'=>'新增失败'];                }            }        }        return $this->fetch();    }    /**     *     * @param null $id     * @return mixed     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function edit_popup($id=null)    {        $this->view->engine->layout(false);        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        //new 实例        $model = new MallPopup();        if($this->request->isPost())        {            $params = $this->request->param();            if($params)            {                $info = $model::get($params['id']);                if(isset($params['date']) && !empty($params['date']))                {                    //分析日期                    $date = explode(" - ",$params['date']);                }                $data = [                    'url'       => !empty($params['url']) ? $params['url']  : $info['url'],                    'images'    => !empty($params['image']) ? $params['image'] : $info['images'],                    'status'    => !empty($params['status']) ? $params['status'] : $info['status'],                    'start_time'    => !empty($date) ? strtotime($date[0]) : $info['start_time'],                    'end_time'      => !empty($date) ? strtotime($date[1]) : $info['end_time'],                ];                //移除                Db::startTrans();                try{                    $model::update($data,['id'=>$params['id']]);                    //删除老绑定用户数据，更新数据                    MallPopupGroup::where(['popup_id'=>$params['id']])->delete();                    if(isset($params['buyer_id']))                    {                        $ids = explode(",",$params['buyer_id']);                        foreach ($ids as $k=>$bid) {                            MallPopupGroup::create(['popup_id'=>$params['id'],'buyer_id'=>$bid]);                        }                    }                    Db::commit();                    return ['status'=>true,'msg'=>'操作成功'];                }catch (PDOException $e){                    Db::rollback();                    return ['status'=>false,'msg'=>'操作失败'];                }            }        }        $id = isset($id) ? $id : $this->request->param('id');        $info = $model::get($id);        $info['startTime'] = date("Y-m-d H:i:s",$info['start_time']);        $info['endTime']   = date("Y-m-d H:i:s",$info['end_time']);        //查询店铺        $site = [];        if($info['site_id'] && !empty($info['site_id'])) $site = AreaMallSite::get(['site_id'=>$info['site_id']]);        $info['site_name'] = !empty($site) ? $site->site_name.'-'.$site->site_id : 0;        //查询商品        $goods = [];        if($info['goods_id'] && !empty($info['goods_id'])) $goods = \app\common\model\Goods::get(['id'=>$info['goods_id']]);        $info['goods_sn'] = !empty($goods) ? $goods['bn'] : 0;        //查询活动用户        $buyer = (new MallPopupGroup())->where(['popup_id'=>$info['id']])->select();        $buyerIds = '';        foreach ($buyer as $b=>$item) {            $buyerIds .= $item['buyer_id'].',';        }        $buyerId = rtrim($buyerIds,',');        $this->assign(compact('info','buyerId'));        return $this->fetch();    }    public function delete($id=null)    {        $id = isset($id) ? $id : $this->request->param('id');        if($id)        {            $get = MallPopup::get($id);            if(!$get) return ['status'=>false,'msg'=>'无效ID'];            if($this->request->isGet())            {                MallPopup::update(['is_delete'=>1],['id'=>$get['id']]);                return ['status'=>true,'msg'=>'删除成功'];            }        }        return [];    }    public function restore($id=null)    {        $id = isset($id) ? $id : $this->request->param('id');        if($id)        {            $get = MallPopup::get($id);            if(!$get) return ['status'=>false,'msg'=>'无效ID'];            if($this->request->isGet())            {                MallPopup::update(['is_delete'=>0],['id'=>$get['id']]);                return ['status'=>true,'msg'=>'还原成功'];            }        }        return [];    }    /**     * 启用禁用     * @param null $id     * @param int $type     * @return array     */    public function open_or_end($id=null,$type=0)    {        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        //new 实例        $model = new MallPopup();        $id = isset($id) ? $id : $this->request->param('id');        $type = isset($type) ? $type : $this->request->param('type');        Db::startTrans();        try{            $status = $type == 'open' ? '1' : '2';            $model::update(['status'=>$status],['id'=>$id]);            Db::commit();            return ['status'=>true,'msg'=>'操作成功'];        }catch (PDOException $e){            Db::rollback();            return ['status'=>true,'msg'=>'操作失败'];        }    }    /**     * 获取商品     * @return array     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function search_goods()    {        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        $model = new \app\common\model\Goods();        if($this->request->isGet())        {            $params = $this->request->param();            if($params)            {                $keywords = isset($params['keywords']) ? $params['keywords'] : '';                $where = [];                $where[] = ['mall_id','eq',$mallId];                $where[] = ['name|bn','like',$keywords.'%'];                $list = $model->where($where)->field('id,name')->select()->toArray();                return $list;            }        }        return [];    }    /**     * 获取店铺     * @return array     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function search_site()    {        //获取权限的筛选条件        $userWhere = $this->getMyUserWhere();        //这里只有区域管理员可以设置，这里先注释掉        $mallId = isset($userWhere[self::PERMISSION_MALL]) ? $userWhere[self::PERMISSION_MALL] : 0;        $model = new AreaMallSite();        if($this->request->isGet())        {            $params = $this->request->param();            if($params)            {                $keywords = isset($params['keywords']) ? $params['keywords'] : '';                $where = [];                $where[] = ['mall_id','eq',$mallId];                $where[] = ['site_name','like',$keywords.'%'];                $list = $model->where($where)->field('site_id,site_name')->select()->toArray();                return $list;            }        }        return [];    }    /**     * 获取用户     * @return array|\think\response\Json     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function get_buyer_info()    {        $model = new Buyer();        if($this->request->isAjax())        {            $params = $this->request->param();            if($params)            {                //用户已绑定手机的                $where = [];                $page = isset($params['page']) ? $params['page'] : 1;                $limit = isset($params['limit']) ? $params['limit'] : 10;                if(isset($params['name']) && !empty($params['name']))                {                    $where[] = ['buyer_id|buyer_name|buyer_tel','like',$params['name'].'%'];                }                $where[] = ['buyer_tel','<>',''];                list($where,$page,$limit) = [$where,$page,$limit];                $list = $model                    ->where($where)                    ->page($page,$limit)                    ->select();                $total = $model                    ->where($where)                    ->count();                foreach ($list as $key=>$item) {                    //获取未下单用户                   $count = OrderCommon::where('buyer_id',$item['buyer_id'])->count();                   if($count>0) $list[$key]['pay'] = "老用户";                   else $list[$key]['pay']  = "新用户";                }                $result = array("code"=>0,"count" => $total, "data" => $list);                return json($result);            }            return [];        }        return [];    }    }